{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Intro to basic text-based computer interfaces\n",
    "\n",
    "*Related text*: Chapter 1 of [Introduction to Scientific and Technical Computing](http://www.crcnetbase.com/isbn/978-1-4987-4506-2)\n",
    "\n",
    "Before we get into programming with python, we'll cover interacting with computers using bash, a convient and fast route to file handing and much more."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Shell overview\n",
    "\n",
    "Many of the programs we use have GUIs: Graphical User Interfaces. Direct text input can often save quite a bit of time and allow additional functionality. While the tasks in this class will be able to be completed on a laptop or desktop (in any operating system), scientific computing generally requires larger, remote resources that are typically Unix or Unix-like systems. In those systems, the primary mode of user iteraction with the operating system is via text-based **shell** processes.\n",
    "\n",
    "There are several different types of shells, including csh/tcsh, sh/Bash, ksh, and zsh. The most common type, and the only one we will discuss is **bash**, the Bourne-again shell. The associated reeading gives more detail on why bash is the way to go. \n",
    "    *FYI:* if you are given an account on a Unix-based computer, the default shell assigned is usually bash, but this is an option you can change. Look to resources like https://stackoverflow.com/ will give you instructions to implement that.\n",
    "\n",
    "Mac OSX is built on a Unix platform and has a built-in program, *terminal*, that provides shell. The default type is bash. The preferences will allow you to change to another type. For this class, we'll stick with bash as it the one that will likely serve you best.\n",
    "    *FYI:* bash on OSX is mostly the same as bash on a Linux machine, but there are a few differences (e.g., see https://unix.stackexchange.com/questions/82244/bash-in-linux-v-s-mac-os). This is good to remember if you see different behavior for the same command on these two types of machines.\n",
    "    \n",
    "Windows computers do not have a built-in Unix-like shell, but have shell emulators. There are many options, including https://www.putty.org/. Windows 10 now allows you to install Linux (see, for example, https://docs.microsoft.com/en-us/windows/wsl/install-win10) which is another route to get you to a bash shell.\n",
    "\n",
    "For the first homework, you will need to write and run bash commands. \n",
    "\n",
    "You will find bash scripts and commands useful throughout this course. They can even be invoked from within a python program."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Some basic, extremely useful bash commands\n",
    "\n",
    "First, open a bash session (e.g. launch terminal on your mac).\n",
    "\n",
    "Enter the following commands (one at a time), and note what you see:\n",
    "\n",
    "```\n",
    "pwd\n",
    "ls\n",
    "ls -a\n",
    "ls -lhatr\n",
    "man ls\n",
    "which ls\n",
    "```\n",
    "\n",
    "Use `cd` to navigate to a different directory. Then `cd` to yet another directory. \n",
    "Now, explore what happens when you:\n",
    "- enter only `cd`\n",
    "- then enter `cd -`\n",
    "- enter `cd ..`\n",
    "\n",
    "Other common, useful commands include:\n",
    "```\n",
    "cp\n",
    "rm\n",
    "mv\n",
    "mkdir\n",
    "cat\n",
    "tail \n",
    "head\n",
    "wget\n",
    "grep\n",
    "diff\n",
    "wc \n",
    "```\n",
    "There are multiple ways to learn what they do, including reading the related text, using `man`', and, of course, asking the internet. There are great tutorials for those interested in learning more (e.g. https://mse150s17.bitbucket.io/shell/), which will pay off if you are a computational researcher. For this course, make sure you learn the basics, such as practiced on HW01.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Some great Unix utilities:\n",
    "\n",
    "## Vim\n",
    "\n",
    "vim is a great text editor. There is some start-up time to learn how to use it. There are many tutorials, such as https://danielmiessler.com/study/vim/#null and http://www.openvim.com/, that will be extremely helpful to the computational researcher. Some basic essentials are shared below. \n",
    "\n",
    "### 'Normal' and 'insert' modes\n",
    "\n",
    "Some basics: When you first open a file with vim, you will be in 'normal' mode. To enter text, you need to be in 'insert' mode. Type `i` to enter insert mode. When you are done typing (or pasting from your buffer), press `esc` to return to 'normal' mode. \n",
    "\n",
    "There are other ways to enter insert mode. Typing 'o' will enter insert mode on a new line below your curser, while 'O' will enter insert mode on a new line above your curser.\n",
    "\n",
    "FYI: the tutorials will show you ways of entering words or characters with a specified number of repeats, replacing a letters or words (without having to go in and out of insert mode), and more time-saving tips. \n",
    "\n",
    "### Navigation\n",
    "\n",
    "* Arrow keys will move the cursor in either mode. I always use them instead of `h`, `j`, `k`, and `l`, which move the cursor only in normal mode, for obvious reasons. All the shortcuts below work only in normal mode, for the same reason.\n",
    "* `G` will navigate to the bottom line; gg to the first line. Typing a number and enter will move your curser down that number of lines.\n",
    "* `$` brings you to the end of the current line; `0` to the beginning\n",
    "\n",
    "FYI: tutorials and 'cheatsheets' will show you may more time-saving navigation tricks, e.g. skipping to the next word, etc.\n",
    "\n",
    "### Copy and Paste\n",
    "\n",
    "There is a different vim buffer from your computer copy and paste buffer. If you copy some text from another window."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
